# These settings are synced to GitHub by https://probot.github.io/apps/settings

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: .github

  # A short description of the repository that will show up on GitHub
  description: Centralized and opinionated GitHub repo settings used across all my repositories.

  # A URL with more information about the repository
  homepage: https://github.com/rogerluan/.github

  # A comma-separated list of topics to set on the repository
  topics: github, probot, settings

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: false

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Always suggest updating pull request branches
  # Whenever there are new changes available in the base branch, present an “update branch” option in the pull request.
  allow_update_branch: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  # enable_automated_security_fixes: true # Broken, see https://github.com/repository-settings/app/issues/625#issuecomment-1252623857

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  # enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  # Pull Request Status
  - name: pending code review
    color: '#0075CA'
    description: null

  - name: pending qa
    color: '#7057FF'
    description: null

  - name: changes requested
    color: '#FBCA04'
    description: null

  - name: approved
    color: '#17F352'
    description: null

  - name: blocked
    color: '#B60205'
    description: null

  - name: deferred
    color: '#C5DEF5'
    description: null

  # Issue Types
  - name: feature
    color: '#17F352'
    description: null

  - name: bug
    color: '#D73A4A'
    description: null

  - name: refactor
    color: '#C5DEF5'
    description: null

# Note: `permission` is only valid on organization-owned repositories.
# The permission to grant the collaborator. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
# * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
# collaborators:
  # - username: rogerluan
  #   permission: push

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# teams:
#   - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #   permission: admin
  # - name: docs
  #   permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch.
        checks: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Permits force pushes to the protected branch by anyone with write access to the repository
      allow_force_pushes: false
      # Allows deletion of the protected branch by anyone with write access to the repository.
      allow_deletions: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions: null
